{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/test-my-bbs.js"],"names":["_assertThisInitialized","self","ReferenceError","testPage","props","state","url","warn","apiResult","apiJSON","response","ok","code","isLoading","handleURLChange","bind","giveURLSuggestion","sendAjaxRequest","setCodeResult","setResponseResult","event","this","setState","target","value","checkURL","URL","str","RegExp","test","getFullApiUrl","header","json","clearResult","intl","fetch","method","credentials","then","status","console","log","text","JSON","parse","catch","error","checkBBSResultOk","sitename","setURL","urlString","startsWith","formatMessage","id","componentDidMount","render","subject","htmlFor","name","mb","type","onChange","href","onClick","e","sx","m","color","fullApi","variant","mt","bg","columns","css","discuzversion","charset","pluginversion","regname","qqconnect","wsqhideregister","mysiteid","ucenterurl","defaultfid","totalposts","totalmembers","testcookie","React","Component","injectIntl"],"mappings":"4FAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,wICEHE,E,YACF,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACTC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,QAAS,KACTC,SAAU,KACVC,IAAI,EACJC,KAAM,IACNC,WAAW,GAEf,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,MACvB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,MACzB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,MACvB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,MACrB,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,MAhBV,E,4CAqBnBD,gBAAA,SAAgBM,GACZC,KAAKC,SAAS,CACVhB,IAAKc,EAAMG,OAAOC,QAEtBH,KAAKL,qB,EAGTS,SAAA,SAASC,GACL,IAAIC,EAAMD,EAKV,OAAwB,GADX,IAAIE,OADA,qDAENC,KAAKF,I,EAOpBG,cAAA,SAAcC,GACV,OAAOA,EAAS,gD,EAGpBb,cAAA,SAAcR,EAAUsB,GACpBX,KAAKC,SAAS,CACV,UAAaZ,EACb,QAAWsB,K,EAInBC,YAAA,WACIZ,KAAKC,SAAS,CACV,UAAY,KACZ,QAAU,Q,EAIlBH,kBAAA,SAAkBR,EAAID,GAClBW,KAAKC,SAAS,CACV,SAAYZ,EACZ,GAAMC,K,EAKdM,gBAAA,WAAmB,IAAD,OACGI,KAAKjB,MAAd8B,KACRb,KAAKY,cAEL,IAAM3B,EAAMe,KAAKS,cAAcT,KAAKhB,MAAMC,KAK1Ce,KAAKhB,MAAMQ,WAAY,EACvBsB,MAFe,uCAEE7B,EAAK,CAClB8B,OAAQ,MACRC,YAAa,cACb,mBAAoB,mBAErBC,MAAK,SAAA5B,GASJ,OAPA,EAAKY,SAAS,CACV,GAAKZ,EAASC,GACd,KAAOD,EAAS6B,OAChB,WAAY,IAEhBC,QAAQC,IAAI/B,GAELA,EAASgC,UAEjBJ,MAAK,SAAAI,GACJ,EAAKxB,cAAcwB,EAAM,MACzB,IAAIV,EAAOW,KAAKC,MAAMF,GACtBF,QAAQC,IAAIC,GACZF,QAAQC,IAAIT,GACZ,EAAKd,cAAcwB,EAAMV,GACzB,EAAKV,SAAS,CACVX,IAAI,OAGPkC,OAAM,SAAUC,GACbN,QAAQC,IAAIK,O,EAKxBC,iBAAA,WACI,OAAuB,MAApB1B,KAAKhB,MAAMI,SAA8C,MAA7BY,KAAKhB,MAAMI,QAAQuC,U,EAQtDC,OAAA,SAAOC,GAEH7B,KAAKC,SAAS,CACVhB,IAAI4C,K,EAKZlC,kBAAA,WAAqB,IACTkB,EAASb,KAAKjB,MAAd8B,KACF5B,EAAMe,KAAKhB,MAAMC,IACnBA,EAAI6C,WAAW,YAAc7C,EAAI6C,WAAW,YAExC9B,KAAKI,SAASnB,GACde,KAAKC,SAAS,CACVf,KAAM,KAIVc,KAAKC,SAAS,CACVf,KAAM2B,EAAKkB,cAAc,CAAEC,GAAI,8CAKvChC,KAAKC,SAAS,CACVf,KAAM2B,EAAKkB,cAAc,CAAEC,GAAI,sC,EAK3CC,kBAAA,a,EAIAC,OAAA,WAAU,IAAD,OACGrB,EAASb,KAAKjB,MAAd8B,KACJ5B,EAAMe,KAAKhB,MAAMC,IACjBD,EAAQgB,KAAKhB,MACjB,OACI,YAAC,IAAD,CAAWmD,QAAStB,EAAKkB,cAAc,CAAEC,GAAI,uBACzC,YAAC,IAAD,KACI,YAAC,IAAD,KACI,YAAC,IAAD,CAAOI,QAAQ,WAAWvB,EAAKkB,cAAc,CAAEC,GAAI,qBACnD,YAAC,IAAD,CACIK,KAAK,UACLC,GAAI,EACJC,KAAK,MACLC,SAAUxC,KAAKP,gBACfU,MAAOlB,IAEX,qBAAG,8BAAU4B,EAAKkB,cAAc,CAAEC,GAAI,6CACtC,qBACCnB,EAAKkB,cAAc,CAAEC,GAAI,yBAE1B,sBACI,sBAAI,YAAC,IAAD,CAAMS,KAAK,IAAIC,QAAS,SAACC,GAAD,OAAO,EAAKf,OAAO,2BAA3C,0BACJ,sBAAI,YAAC,IAAD,CAAMa,KAAK,IAAIC,QAAS,SAACC,GAAD,OAAO,EAAKf,OAAO,wBAA3C,wBAMJ5B,KAAKI,SAASnB,IAEd,iBAAG2D,GAAI,CACHC,EAAG,EACHC,MAAO,YAENjC,EAAKkB,cAAc,CAAEC,GAAI,6BAA+B,CACrDe,QAAS,KAEb,YAAC,IAAD,CAAMN,KAAMzC,KAAKS,cAAcxB,IAAOe,KAAKS,cAAcxB,KAM7De,KAAKI,SAASnB,IACd,YAAC,IAAD,CACI+D,QAAQ,UACRN,QAAS1C,KAAKJ,gBACdgD,GAAI,CACAK,GAAI,EACJC,GAAG,SAIHrC,EAAKkB,cAAc,CAAEC,GAAI,0BAO7C,YAAC,IAAD,CAAMmB,QAAS,EAAGF,GAAI,GAClB,uBACKjE,EAAMQ,WAEP,qBACI,YAAC,IAAD,MACCqB,EAAKkB,cAAc,CAAEC,GAAI,4BAA6B,CAAC,IAAM/C,MAIrEe,KAAKhB,MAAMG,WAER,uBAEAa,KAAK0B,mBAED,YAAC,IAAD,CAAOsB,QAAQ,YAAYV,GAAI,EAAGM,GAAI,CAClCM,GAAG,UACHrC,EAAKkB,cAAc,CAAEC,GAAI,6BAA8B,CACvD,IAAM/C,EACN,KAAOD,EAAMI,QAAQuC,YAKzB,YAAC,IAAD,CAAOqB,QAAQ,YAAYV,GAAI,GAAIzB,EAAKkB,cAAc,CAAEC,GAAI,uCAUxE,YAAC,IAAD,CAAMmB,QAAS,CAAC,EAAG,EAAG,GAClBP,GAAI,CACAK,GAAI,EACJX,GAAI,IAGPtC,KAAKhB,MAAMG,WACR,YAAC,IAAD,KACI,sBAAK0B,EAAKkB,cAAc,CAAEC,GAAI,4BAC9B,mBACIoB,IAAG,GAGLpD,KAAKhB,MAAMG,YAIpBa,KAAKhB,MAAMI,SACR,YAAC,IAAD,KACI,sBAAKyB,EAAKkB,cAAc,CAAEC,GAAI,4BAC9B,yBACI,yBACI,kBAAIY,GAAI,CACJM,GAAI,YAEJ,sBAAKrC,EAAKkB,cAAc,CAAEC,GAAI,qBAC9B,sBAAKnB,EAAKkB,cAAc,CAAEC,GAAI,uBAC9B,sBAAKnB,EAAKkB,cAAc,CAAEC,GAAI,8BAGtC,yBACI,sBACI,sBAAKnB,EAAKkB,cAAc,CAAEC,GAAI,gCAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQiE,eACxB,sBAAKxC,EAAKkB,cAAc,CAAEC,GAAI,sBAElC,sBACI,sBAAKnB,EAAKkB,cAAc,CAAEC,GAAI,yBAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQkE,SACxB,4BAEJ,sBACI,sBAAKzC,EAAKkB,cAAc,CAAEC,GAAI,gCAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQmE,eACxB,4BAEJ,sBACI,sBAAK1C,EAAKkB,cAAc,CAAEC,GAAI,+BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQoE,SACxB,4BAEJ,sBACI,sBAAK3C,EAAKkB,cAAc,CAAEC,GAAI,4BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQqE,WACxB,4BAEJ,sBACI,sBAAK5C,EAAKkB,cAAc,CAAEC,GAAI,+BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQsE,iBACxB,4BAEJ,sBACI,sBAAK7C,EAAKkB,cAAc,CAAEC,GAAI,2BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQuC,UACxB,4BAEJ,sBACI,sBAAKd,EAAKkB,cAAc,CAAEC,GAAI,yBAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQuE,UACxB,4BAEJ,sBACI,sBAAK9C,EAAKkB,cAAc,CAAEC,GAAI,6BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQwE,YACxB,4BAEJ,sBACI,sBAAK/C,EAAKkB,cAAc,CAAEC,GAAI,6BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQyE,YACxB,4BAEJ,sBACI,sBAAKhD,EAAKkB,cAAc,CAAEC,GAAI,4BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQ0E,YACxB,4BAEJ,sBACI,sBAAKjD,EAAKkB,cAAc,CAAEC,GAAI,+BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQ2E,cACxB,4BAEJ,sBACI,sBAAKlD,EAAKkB,cAAc,CAAEC,GAAI,6BAC9B,sBAAKhC,KAAKhB,MAAMI,QAAQ4E,YACxB,kC,GAvVjBC,IAAMC,WA0WdC,+BAAWrF","file":"component---src-pages-test-my-bbs-js-05f97814591230d94cdb.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\"\nimport DocLayout from \"../components/doc-layout\"\nimport { Box, Grid, Link, Alert, Input, Label, Button, Spinner } from 'theme-ui'\nimport { injectIntl } from \"gatsby-plugin-intl\"\n\n\n\nclass testPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: \"\",\n            warn: \"\",\n            apiResult: \"\",\n            apiJSON: null,\n            response: null,\n            ok: false,\n            code: 200,\n            isLoading: false\n        }\n        this.handleURLChange = this.handleURLChange.bind(this)\n        this.giveURLSuggestion = this.giveURLSuggestion.bind(this)\n        this.sendAjaxRequest = this.sendAjaxRequest.bind(this)\n        this.setCodeResult = this.setCodeResult.bind(this)\n        this.setResponseResult = this.setResponseResult.bind(this)\n\n    }\n\n\n    handleURLChange(event) {\n        this.setState({\n            url: event.target.value\n        })\n        this.giveURLSuggestion()\n    }\n\n    checkURL(URL) {\n        var str = URL;\n        //判断URL地址的正则表达式为:http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&=]*)?\n        //下面的代码中应用了转义字符\"\\\"输出一个字符\"/\"\n        var Expression = /http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&=]*)?/;\n        var objExp = new RegExp(Expression);\n        if (objExp.test(str) == true) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getFullApiUrl(header) {\n        return header + \"/api/mobile/index.php?version=4&module=check\";\n    }\n\n    setCodeResult(response, json) {\n        this.setState({\n            \"apiResult\": response,\n            \"apiJSON\": json\n        })\n    }\n\n    clearResult(){\n        this.setState({\n            \"apiResult\":null,\n            \"apiJSON\":null\n        })\n    }\n\n    setResponseResult(ok, response) {\n        this.setState({\n            \"response\": response,\n            \"ok\": ok\n\n        })\n    }\n\n    sendAjaxRequest() {\n        const { intl } = this.props;\n        this.clearResult()\n        \n        const url = this.getFullApiUrl(this.state.url);\n        \n\n\n        var proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n        this.state.isLoading = true\n        fetch(proxyUrl + url, {\n            method: 'GET',\n            credentials: 'same-origin',\n            'X-Requested-With': 'XMLHttpRequest'\n\n        }).then(response => {\n            //setResponseResult(true,response)\n            this.setState({\n                \"ok\":response.ok,\n                \"code\":response.status,\n                \"isLoading\":false\n            })\n            console.log(response);\n            //this.setResponseResult(response.ok,response)\n            return response.text()\n\n        }).then(text => {\n            this.setCodeResult(text, null)\n            var json = JSON.parse(text)\n            console.log(text)\n            console.log(json)\n            this.setCodeResult(text, json)\n            this.setState({\n                ok: true\n            })\n        })\n            .catch(function (error) {\n                console.log(error)\n                \n            })\n    }\n\n    checkBBSResultOk(){\n        if(this.state.apiJSON!=null && this.state.apiJSON.sitename!=null){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n\n    setURL(urlString){\n        //this.url = urlString\n        this.setState({\n            url:urlString\n        })\n    }\n\n\n    giveURLSuggestion() {\n        const { intl } = this.props;\n        const url = this.state.url;\n        if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n            // ok with protocol\n            if (this.checkURL(url)) {\n                this.setState({\n                    warn: \"\"\n                })\n            }\n            else {\n                this.setState({\n                    warn: intl.formatMessage({ id: \"test-my-bbs.warn_enter_to_check_problem\" })\n                })\n            }\n        }\n        else {\n            this.setState({\n                warn: intl.formatMessage({ id: \"test-my-bbs.warn_need_protocol\" })\n            })\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        const { intl } = this.props;\n        var url = this.state.url;\n        var state = this.state;\n        return (\n            <DocLayout subject={intl.formatMessage({ id: \"test-my-bbs.title\" })}>\n                <Grid>\n                    <Box>\n                        <Label htmlFor='bbs_url'>{intl.formatMessage({ id: \"test-my-bbs.url\" })}</Label>\n                        <Input\n                            name='bbs_url'\n                            mb={3}\n                            type=\"url\"\n                            onChange={this.handleURLChange}\n                            value={url}\n                        />\n                        <p><small>*:{intl.formatMessage({ id: \"test-my-bbs.redirect_by_cross_anywhere\" })}</small></p>\n                        <p>\n                        {intl.formatMessage({ id: \"test-my-bbs.example\" })}\n                        </p>\n                        <ul>\n                            <li><Link href=\"#\" onClick={(e) => this.setURL(\"https://www.mcbbs.net\")}>https://www.mcbbs.net</Link></li>\n                            <li><Link href=\"#\" onClick={(e) => this.setURL(\"https://keylol.com\")}>https://keylol.com</Link></li>\n                            \n                        </ul>\n                        \n\n                        {\n                            this.checkURL(url) &&\n\n                            <p sx={{\n                                m: 0,\n                                color: 'primary'\n                            }}>\n                                {intl.formatMessage({ id: \"test-my-bbs.api_full_text\" }, {\n                                    fullApi: \"\"\n                                })}\n                                <Link href={this.getFullApiUrl(url)}>{this.getFullApiUrl(url)}</Link>\n                            </p>\n\n                        }\n                        \n                        {\n                            this.checkURL(url) &&\n                            <Button\n                                variant=\"success\"\n                                onClick={this.sendAjaxRequest}\n                                sx={{\n                                    mt: 2,\n                                    bg:\"blue\"\n\n                                }}>\n                                {\n                                    intl.formatMessage({ id: \"test-my-bbs.submit\" })}</Button>\n                        }\n\n\n\n                    </Box>\n                </Grid>\n                <Grid columns={1} mt={2}>\n                    <box>\n                        {state.isLoading&&(\n                        \n                        <p>\n                            <Spinner />\n                            {intl.formatMessage({ id: \"test-my-bbs.loading_data\" },{\"url\":url})}\n                        </p>)\n                        }\n                    </box>\n                    {this.state.apiResult && \n                    (\n                        <box>\n                        {\n                        this.checkBBSResultOk()?\n                        (\n                            <Alert variant='secondary' mb={2} sx={{\n                                bg:\"green\"\n                            }}>{intl.formatMessage({ id: \"test-my-bbs.app_add_guide\" },{\n                                \"url\":url,\n                                \"name\":state.apiJSON.sitename\n                            })}</Alert>\n                            \n                            \n                        ):(\n                            <Alert variant='secondary' mb={2}>{intl.formatMessage({ id: \"test-my-bbs.bbs_not_pass_result\" })}</Alert>\n                        )\n                        \n                        }\n                    </box>\n                    )\n                    \n                    }\n                    \n                </Grid>\n                <Grid columns={[1, 2, 2]}\n                    sx={{\n                        mt: 4,\n                        mb: 4\n                    }}\n                >\n                    {this.state.apiResult &&\n                        <Box>\n                            <h3>{intl.formatMessage({ id: \"test-my-bbs.raw_result\" })}</h3>\n                            <pre\n                                css={{\n                                    overflow: \"scroll\",\n                                }}\n                            >{this.state.apiResult}\n                            </pre>\n                        </Box>\n                    }\n                    {this.state.apiJSON &&\n                        <Box>\n                            <h3>{intl.formatMessage({ id: \"test-my-bbs.attributes\" })}</h3>\n                            <table>\n                                <thead>\n                                    <tr sx={{\n                                        bg: \"primary\"\n                                    }}>\n                                        <th>{intl.formatMessage({ id: \"test-my-bbs.key\" })}</th>\n                                        <th>{intl.formatMessage({ id: \"test-my-bbs.value\" })}</th>\n                                        <th>{intl.formatMessage({ id: \"test-my-bbs.compatible\" })}</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.discuz_version\" })}</td>\n                                        <td>{this.state.apiJSON.discuzversion}</td>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.yes\" })}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.charset\" })}</td>\n                                        <td>{this.state.apiJSON.charset}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.plugin_version\" })}</td>\n                                        <td>{this.state.apiJSON.pluginversion}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.register_name\" })}</td>\n                                        <td>{this.state.apiJSON.regname}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.qq_connect\" })}</td>\n                                        <td>{this.state.apiJSON.qqconnect}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.hide_register\" })}</td>\n                                        <td>{this.state.apiJSON.wsqhideregister}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.site_name\" })}</td>\n                                        <td>{this.state.apiJSON.sitename}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.site_id\" })}</td>\n                                        <td>{this.state.apiJSON.mysiteid}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.ucenter_url\" })}</td>\n                                        <td>{this.state.apiJSON.ucenterurl}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.default_fid\" })}</td>\n                                        <td>{this.state.apiJSON.defaultfid}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.total_post\" })}</td>\n                                        <td>{this.state.apiJSON.totalposts}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.total_members\" })}</td>\n                                        <td>{this.state.apiJSON.totalmembers}</td>\n                                        <td>/</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{intl.formatMessage({ id: \"test-my-bbs.test_cookie\" })}</td>\n                                        <td>{this.state.apiJSON.testcookie}</td>\n                                        <td>/</td>\n                                    </tr>\n                                </tbody>\n\n                            </table>\n                        </Box>\n                    }\n\n\n\n                </Grid>\n            </DocLayout>\n        )\n    }\n\n}\n\n\n\nexport default injectIntl(testPage)"],"sourceRoot":""}