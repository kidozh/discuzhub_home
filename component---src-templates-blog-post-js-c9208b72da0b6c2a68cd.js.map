{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","intl","useIntl","frontmatter","description","excerpt","className","itemScope","itemType","sx","pl","pr","columns","h1","itemProp","alignItems","fontWeight","as","color","p","mr","keywords","mt","pt","coverName","cover","alt","roundRadius","gap","src","Logo","icon","faClock","formatMessage","id","time","date","variant","faCoffee","min","timeToRead","tags","forEach","v","dangerouslySetInnerHTML","__html","html","bg","borderColor","borderStyle","pb","to","fields","slug","rel","textAlign"],"mappings":"4FAAA,kKAsJeA,UAxIU,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,GAAY,UAAAL,EAAKM,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAOC,oBACb,OACE,YAAC,IAAD,CAAQV,SAAUA,EAAUM,MAAOH,GACjC,YAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYE,SAAWZ,EAAKY,UAEhD,uBACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,2BAGA,uBACEC,GAAI,CACFC,GAAG,CAAC,EAAE,EAAE,GACRC,GAAG,CAAC,EAAE,EAAE,KAGV,YAAC,IAAD,CAAMC,QAAS,CAAC,IACd,YAAC,IAAD,KACE,YAAC,IAAOC,GAAR,CAAWC,SAAS,WAAWL,GAAI,CACjCM,WAAW,SACXC,WAAW,MACTvB,EAAKU,YAAYL,OACrB,YAAC,IAAD,CAASmB,GAAG,KAAKR,GAAI,CACnBS,MAAM,OACNF,WAAW,MAEX,YAAC,IAAD,CAAOG,EAAG,EAAGC,GAAI,GAAI3B,EAAKU,YAAYkB,UACrC5B,EAAKU,YAAYE,UAGtB,YAAC,IAAD,CAAKI,GAAI,CACPa,GAAG,IAEH,YAAC,IAAD,CAAWb,GAAI,CACbc,GAAG,CAAC,EAAE,EAAE,IAEPC,UAAW/B,EAAKU,YAAYsB,MAAOC,IAAKjC,EAAKU,YAAYsB,MAAOE,aAAa,MAIpF,YAAC,IAAD,CAAMf,QAAS,CAAC,EAAE,UAAU,WAC1BgB,IAAK,GAEL,YAAC,IAAD,CAAKnB,GAAI,CACPc,GAAG,CAAC,EAAE,EAAE,GACRD,GAAG,CAAC,EAAE,EAAE,KAGR,YAAC,IAAD,CAAQO,IAAKC,IAAMJ,IAAI,SACvB,YAAC,IAAD,CAAST,GAAG,KAAKR,GAAI,CACnBS,MAAM,UACNF,WAAW,MAFb,cAMA,YAAC,IAAD,CAASC,GAAG,IAAIR,GAAI,CAClBS,MAAM,OACNF,WAAY,MAEZ,YAAC,IAAD,CAAiBe,KAAMC,MACtB/B,EAAKgC,cAAc,CAACC,GAAG,oBAAoB,CAACC,KAAK1C,EAAKU,YAAYiC,QAErE,YAAC,IAAD,CAAMnB,GAAG,IAAIoB,QAAQ,QACnB,YAAC,IAAD,CAAiBN,KAAMO,MACtBrC,EAAKgC,cAAc,CAACC,GAAG,uBAAuB,CAACK,IAAI9C,EAAK+C,cAO3D,YAAC,IAAD,KACG/C,EAAKU,YAAYsC,KAAKC,SACrB,SAAAC,GAAC,OACC,qBAAIA,QAQZ,YAAC,IAAD,CAAKC,wBAAyB,CAAEC,OAAQpD,EAAKqD,MACxChC,SAAS,iBAIhB,YAAC,IAAD,CAASL,GAAI,CACXsC,GAAG,OACH7B,MAAM,OACN8B,YAAY,OACZC,YAAY,YAGd,YAAC,IAAD,CAAMxC,GAAI,CACRc,GAAG,CAAC,EAAE,EAAE,GACR2B,GAAG,CAAC,EAAE,EAAE,IACPtC,QAAS,CAAC,EAAE,IACb,YAAC,IAAD,KACGb,GACC,YAAC,OAAD,CAAMoD,GAAIpD,EAASqD,OAAOC,KAAMC,IAAI,QAApC,KACKvD,EAASI,YAAYL,QAI9B,YAAC,IAAD,CAAKW,GAAI,CACP8C,UAAU,UAETvD,GACC,YAAC,OAAD,CAAMmD,GAAInD,EAAKoD,OAAOC,KAAMC,IAAI,QAC7BtD,EAAKG,YAAYL,MADpB,SASR","file":"component---src-templates-blog-post-js-c9208b72da0b6c2a68cd.js","sourcesContent":["/** @jsx jsx */\nimport {Styled, jsx, Divider, Container, Box,  Grid, Heading, Avatar, Text, Badge} from 'theme-ui'\nimport { Link as GatsbyLink, graphql } from \"gatsby\"\nimport {Link, useIntl } from \"gatsby-plugin-intl\"\nimport BlogCover from \"../components/blog-cover\"\nimport Logo from \"../../static/logo.svg\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faClock } from '@fortawesome/free-solid-svg-icons'\n\n\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = pageContext\n  const intl = useIntl()\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.excerpt || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n\n        </header>\n        <section\n          sx={{\n            pl:[4,5,7],\n            pr:[4,5,7],\n          }}\n        >\n          <Grid columns={[1]}>\n            <Box>\n              <Styled.h1 itemProp=\"headline\" sx={{\n                alignItems:'center',\n                fontWeight:400\n              }}>{post.frontmatter.title}</Styled.h1>\n              <Heading as=\"h4\" sx={{\n                color:\"gray\",\n                fontWeight:400\n              }}>\n                <Badge p={1} mr={2}>{post.frontmatter.keywords}</Badge>\n                {post.frontmatter.excerpt}\n              </Heading>\n            </Box>\n            <Box sx={{\n              mt:2\n            }}>\n              <BlogCover sx={{\n                pt:[0,2,4],\n\n              }} coverName={post.frontmatter.cover} alt={post.frontmatter.cover} roundRadius={true} />\n            </Box>\n\n          </Grid>\n          <Grid columns={[1,'1fr 2fr','1fr 2fr']}\n            gap={2}\n          >\n            <Box sx={{\n              pt:[4,4,4],\n              mt:[4,4,4]\n            }}>\n\n              <Avatar src={Logo} alt=\"logo\"/>\n              <Heading as=\"h4\" sx={{\n                color:\"primary\",\n                fontWeight:400\n              }} >\n                Discuz Hub\n              </Heading>\n              <Heading as=\"p\" sx={{\n                color:\"gray\",\n                fontWeight: 400\n              }}>\n                <FontAwesomeIcon icon={faClock} />\n                {intl.formatMessage({id:\"blog.publishTime\"},{time:post.frontmatter.date})}\n              </Heading>\n              <Text as=\"p\" variant=\"mute\">\n                <FontAwesomeIcon icon={faCoffee} />\n                {intl.formatMessage({id:\"blog.timeToReadUnit\"},{min:post.timeToRead})  }\n              </Text>\n              {/* Table of Content */}\n              {/*<Container dangerouslySetInnerHTML={{ __html: post.tableOfContents }}*/}\n              {/*           itemProp=\"articleBody\">*/}\n\n              {/*</Container>*/}\n              <Container>\n                {post.frontmatter.tags.forEach(\n                  v => (\n                    <a>{v}</a>\n                  )\n                )}\n\n              </Container>\n\n            </Box>\n\n            <Box dangerouslySetInnerHTML={{ __html: post.html }}\n                 itemProp=\"articleBody\">\n            </Box>\n\n          </Grid>\n          <Divider sx={{\n            bg:\"text\",\n            color:\"mute\",\n            borderColor:\"mute\",\n            borderStyle:\"dashed\"\n\n          }} />\n          <Grid sx={{\n            pt:[1,2,2],\n            pb:[1,2,2]\n          }} columns={[1,2]}>\n            <Box>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </Box>\n            <Box sx={{\n              textAlign:\"right\"\n            }}>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </Box>\n\n          </Grid>\n        </section>\n\n        <footer>\n\n        </footer>\n      </article>\n\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        cover\n        excerpt\n        keywords\n        tags\n      }\n      html\n      tableOfContents\n      timeToRead\n    }\n  }\n`"],"sourceRoot":""}