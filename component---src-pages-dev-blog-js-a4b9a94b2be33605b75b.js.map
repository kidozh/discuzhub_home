{"version":3,"file":"component---src-pages-dev-blog-js-a4b9a94b2be33605b75b.js","mappings":"iPAyHA,UA/GaA,IAAe,IAAd,KAAEC,GAAMD,EACpB,MAAME,GAAOC,EAAAA,EAAAA,WAGb,OAFAC,QAAQC,IAAIJ,IAGVK,EAAAA,EAAAA,GAACC,EAAAA,EAAM,CAACC,QAASN,EAAKO,cAAc,CAAEC,GAAI,gBAExCJ,EAAAA,EAAAA,GAACK,EAAAA,GAAS,CAACC,GAAI,CACbC,GAAI,OACJC,EAAG,KAEHR,EAAAA,EAAAA,GAACS,EAAAA,GAAOC,GAAE,CAACJ,GAAI,CACbK,MAAO,QACPC,UAAW,SACXC,WAAY,MAEXjB,EAAKO,cAAc,CAAEC,GAAI,gBAE5BJ,EAAAA,EAAAA,GAACS,EAAAA,GAAOD,EAAC,CAACF,GAAI,CACZK,MAAO,QACPC,UAAW,WAEVhB,EAAKO,cAAc,CAAEC,GAAI,2BAE5BJ,EAAAA,EAAAA,GAACS,EAAAA,GAAOD,EAAC,CAACF,GAAI,CACZQ,GAAI,EACJH,MAAO,QACPC,UAAW,WAEVhB,EAAKO,cAAc,CAACC,GAAG,sBAAsB,CAACW,MAAMpB,EAAKqB,kBAAkBC,gBAGhFjB,EAAAA,EAAAA,GAACK,EAAAA,GAAS,CAACa,GAAI,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,EAAG,KACnCnB,EAAAA,EAAAA,GAACoB,EAAAA,GAAI,CAACC,IAAK,EACLC,QAAS,CAAC,EAAG,EAAG,IACnB3B,EAAKqB,kBAAkBO,MAAMC,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACzCzB,EAAAA,EAAAA,GAAC2B,EAAAA,GAAG,MACF3B,EAAAA,EAAAA,GAAC4B,EAAAA,GAAI,CACHC,IAAKH,EAAKtB,GACVE,GAAI,CACFwB,GAAG,KAIL9B,EAAAA,EAAAA,GAACoB,EAAAA,GAAI,CAACE,QAAS,CAAC,EAAE,aAChBtB,EAAAA,EAAAA,GAAC2B,EAAAA,GAAG,MAAC3B,EAAAA,EAAAA,GAAC+B,EAAAA,EAAS,CAACC,UAAWN,EAAKO,YAAYC,UAC5ClC,EAAAA,EAAAA,GAAC2B,EAAAA,GAAG,MACF3B,EAAAA,EAAAA,GAACmC,EAAAA,GAAO,CAACC,GAAG,KAAK9B,GAAI,CACnBO,WAAY,SAEZb,EAAAA,EAAAA,GAACqC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,KAAW,IAAEb,EAAKO,YAAYO,KAAK,KACvDd,EAAKO,YAAYQ,WAEtBzC,EAAAA,EAAAA,GAACmC,EAAAA,GAAO,CAACC,GAAG,KAAK9B,GAAI,CACnBQ,GAAG,CAAC,EAAE,KAAK,GACXgB,GAAG,CAAC,EAAE,EAAE,GACRjB,WAAY,OAEZb,EAAAA,EAAAA,GAAC0C,EAAAA,KAAQ,CACPC,KAAMjB,EAAKkB,OAAOC,KAClBC,GAAIpB,EAAKkB,OAAOC,KAChBvC,GAAI,CACFK,MAAO,UACPoC,eAAgB,OAChB,gBAAiB,CACfpC,MAAO,UACPqC,WAAY,kBAGftB,EAAKO,YAAYgB,SAGtBjD,EAAAA,EAAAA,GAACS,EAAAA,GAAOD,EAAC,CAACF,GAAI,CACZK,MAAM,SACJe,EAAKwB,YAIX,MAKL,C","sources":["webpack://gatsby-starter-hello-world/./src/pages/dev-blog.js"],"sourcesContent":["/** @jsx jsx */\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport {Themed} from \"@theme-ui/mdx\"\nimport { Box, Card, Container, Grid, Image, jsx, Heading } from \"theme-ui\"\nimport { Link as IntlLink, useIntl } from \"gatsby-plugin-intl\"\nimport BlogCover from \"../components/blog-cover\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClock } from '@fortawesome/free-solid-svg-icons'\n\nconst Blog = ({ data }) => {\n  const intl = useIntl()\n  console.log(data)\n\n  return (\n    <Layout subject={intl.formatMessage({ id: \"blog.blog\" })}>\n      {/* title part*/}\n      <Container sx={{\n        bg: \"gray\",\n        p: 4\n      }}>\n        <Themed.h1 sx={{\n          color: \"white\",\n          textAlign: \"center\",\n          fontWeight: 600\n        }}>\n          {intl.formatMessage({ id: \"blog.blog\" })}\n        </Themed.h1>\n        <Themed.p sx={{\n          color: \"white\",\n          textAlign: \"center\"\n        }}>\n          {intl.formatMessage({ id: \"blog.blog_annotation\" })}\n        </Themed.p>\n        <Themed.p sx={{\n          mt: 1,\n          color: \"white\",\n          textAlign: \"center\"\n        }}>\n          {intl.formatMessage({id:\"blog.allPostCounts\"},{posts:data.allMarkdownRemark.totalCount})  }\n        </Themed.p>\n      </Container>\n      <Container px={[1, 2, 4]} py={[1, 2, 4]}>\n        <Grid gap={1}\n              columns={[1, 1, 1]}>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Box>\n              <Card\n                key={node.id}\n                sx={{\n                  mb:2,\n                  // pl: [1, 2, 4],\n                  // pr: [1, 2, 4]\n                }}>\n                <Grid columns={[1,\"1fr 3fr\"]}>\n                  <Box><BlogCover coverName={node.frontmatter.cover} /></Box>\n                  <Box>\n                    <Heading as=\"h4\" sx={{\n                      fontWeight: \"500\"\n                    }}>\n                      <FontAwesomeIcon icon={faClock} /> {node.frontmatter.date}\n                      / {node.frontmatter.keywords}\n                    </Heading>\n                    <Heading as=\"h1\" sx={{\n                      mt:[2,null,3],\n                      mb:[1,2,2],\n                      fontWeight: 600\n                    }}>\n                      <IntlLink\n                        href={node.fields.slug}\n                        to={node.fields.slug}\n                        sx={{\n                          color: \"inherit\",\n                          textDecoration: \"none\",\n                          \":hover,:focus\": {\n                            color: \"primary\",\n                            transition: \".5s all ease\"\n                          }\n                        }}>\n                        {node.frontmatter.title}\n                      </IntlLink>\n                    </Heading>\n                    <Themed.p sx={{\n                      color:\"gray\"\n                    }}>{node.excerpt}</Themed.p>\n                  </Box>\n                </Grid>\n              </Card>\n            </Box>\n          ))}\n        </Grid>\n\n      </Container>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            cover\n            tags\n            excerpt\n            keywords\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport default Blog;"],"names":["_ref","data","intl","useIntl","console","log","jsx","Layout","subject","formatMessage","id","Container","sx","bg","p","Themed","h1","color","textAlign","fontWeight","mt","posts","allMarkdownRemark","totalCount","px","py","Grid","gap","columns","edges","map","_ref2","node","Box","Card","key","mb","BlogCover","coverName","frontmatter","cover","Heading","as","FontAwesomeIcon","icon","faClock","date","keywords","IntlLink","href","fields","slug","to","textDecoration","transition","title","excerpt"],"sourceRoot":""}