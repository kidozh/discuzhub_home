{"version":3,"sources":["webpack:///./src/pages/dev-blog.js"],"names":["data","intl","useIntl","console","log","sx","bg","p","h1","color","textAlign","fontWeight","formatMessage","id","mt","posts","allMarkdownRemark","totalCount","px","py","gap","columns","edges","map","node","key","mb","coverName","frontmatter","cover","h2","href","fields","slug","to","textDecoration","transition","title","date","excerpt","query"],"mappings":"4FAAA,uJAQe,sBAAe,IAAZA,EAAW,EAAXA,KACVC,EAAOC,oBAGb,OAFAC,QAAQC,IAAIJ,GAGV,YAAC,IAAD,KAEE,YAAC,IAAD,CAAWK,GAAI,CACbC,GAAI,OACJC,EAAG,IAEH,YAAC,IAAOC,GAAR,CAAWH,GAAI,CACbI,MAAO,QACPC,UAAW,SACXC,WAAY,MAEXV,EAAKW,cAAc,CAAEC,GAAI,eAE5B,YAAC,IAAON,EAAR,CAAUF,GAAI,CACZI,MAAO,QACPC,UAAW,WAEVT,EAAKW,cAAc,CAAEC,GAAI,0BAE5B,YAAC,IAAON,EAAR,CAAUF,GAAI,CACZS,GAAI,EACJL,MAAO,QACPC,UAAW,WAEVT,EAAKW,cAAc,CAACC,GAAG,sBAAsB,CAACE,MAAMf,EAAKgB,kBAAkBC,eAGhF,YAAC,IAAD,CAAWC,GAAI,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,EAAG,IACnC,YAAC,IAAD,CAAMC,IAAK,EACLC,QAAS,CAAC,EAAG,EAAG,IACnBrB,EAAKgB,kBAAkBM,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,IAAKD,EAAKX,GACVR,GAAI,CACFqB,GAAG,IAIL,YAAC,IAAD,KACE,YAAC,IAAD,CAAWC,UAAWH,EAAKI,YAAYC,QACvC,YAAC,IAAOC,GAAR,CAAWzB,GAAI,CACbS,GAAG,CAAC,EAAE,KAAK,KAEX,YAAC,OAAD,CACEiB,KAAMP,EAAKQ,OAAOC,KAClBC,GAAIV,EAAKQ,OAAOC,KAChB5B,GAAI,CACFI,MAAO,UACP0B,eAAgB,OAChB,gBAAiB,CACf1B,MAAO,UACP2B,WAAY,kBAGfZ,EAAKI,YAAYS,QAGtB,qBAAOhC,GAAI,CACTM,WAAY,SACVa,EAAKI,YAAYU,MAErB,YAAC,IAAO/B,EAAR,KAAWiB,EAAKe,mBAW3B,IAAMC,EAAK","file":"component---src-pages-dev-blog-js-bec67a2c47f12717b308.js","sourcesContent":["/** @jsx jsx */\nimport React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Box, Card, Container, Grid, Image, jsx, Styled } from \"theme-ui\"\nimport { Link as IntlLink, useIntl } from \"gatsby-plugin-intl\"\nimport BlogCover from \"../components/blog-cover\"\n\nexport default ({ data }) => {\n  const intl = useIntl()\n  console.log(data)\n\n  return (\n    <Layout>\n      {/* title part*/}\n      <Container sx={{\n        bg: \"gray\",\n        p: 4\n      }}>\n        <Styled.h1 sx={{\n          color: \"white\",\n          textAlign: \"center\",\n          fontWeight: 600\n        }}>\n          {intl.formatMessage({ id: \"blog.blog\" })}\n        </Styled.h1>\n        <Styled.p sx={{\n          color: \"white\",\n          textAlign: \"center\"\n        }}>\n          {intl.formatMessage({ id: \"blog.blog_annotation\" })}\n        </Styled.p>\n        <Styled.p sx={{\n          mt: 1,\n          color: \"white\",\n          textAlign: \"center\"\n        }}>\n          {intl.formatMessage({id:\"blog.allPostCounts\"},{posts:data.allMarkdownRemark.totalCount})  }\n        </Styled.p>\n      </Container>\n      <Container px={[1, 2, 4]} py={[1, 2, 4]}>\n        <Grid gap={1}\n              columns={[1, 2, 3]}>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <Container>\n              <Box\n                key={node.id}\n                sx={{\n                  mb:2,\n                  // pl: [1, 2, 4],\n                  // pr: [1, 2, 4]\n                }}>\n                <Card>\n                  <BlogCover coverName={node.frontmatter.cover} />\n                  <Styled.h2 sx={{\n                    mt:[2,null,3]\n                  }}>\n                    <IntlLink\n                      href={node.fields.slug}\n                      to={node.fields.slug}\n                      sx={{\n                        color: \"inherit\",\n                        textDecoration: \"none\",\n                        \":hover,:focus\": {\n                          color: \"primary\",\n                          transition: \".5s all ease\"\n                        }\n                      }}>\n                      {node.frontmatter.title}\n                    </IntlLink>\n                  </Styled.h2>\n                  <small sx={{\n                    fontWeight: \"bold\"\n                  }}>{node.frontmatter.date}</small>\n\n                  <Styled.p>{node.excerpt}</Styled.p>\n                </Card>\n              </Box>\n            </Container>\n          ))}\n        </Grid>\n\n      </Container>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {fields: frontmatter___date, order: DESC}) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            cover\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}